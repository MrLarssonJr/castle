open module Group
import "@k8s/K8sResource.pkl"
import "Component.pkl"
import "Group.pkl"

name: String
hidden children: Listing<(Component|Group)>

hidden fixed components: Map<String, Component> = children.toList()
  .map((child) -> if (child is Component) (child) { id = child.id name = "\(module.name)-\(child.name)" } else (child) { name = "\(module.name)-\(child.name)" })
  .flatMap((child) -> if (child is Component) List(child) else child.components.values)
  .map((component) -> (component) { id = component.id components = module.components })
  .toMap((component) -> component.id, (component) -> component)

fixed resources: Listing<K8sResource> = new {
  for (_, component in components) {
    ...component.resources
  }
}

output {
  value = resources
  renderer = (K8sResource.output.renderer as YamlRenderer) {
    isStream = true
  }
}
